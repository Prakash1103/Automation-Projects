package SeleniumProject;

import java.util.List;
import java.util.Set;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;

public class Ecomerce {

	public static void main(String[] args) throws InterruptedException {
		// TODO Auto-generated method stub
		
        System.setProperty("webdriver.chrome.driver", "D:\\Software Master\\driver\\chromedriver-win64\\chromedriver.exe");
        
		WebDriver driver=new ChromeDriver();
		//To Maximize the window 
		driver.manage().window().maximize();
		//Implicit wait 
		driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS);
		//Base URL
		String baseurl="https://awesomeqa.com/ui/";
		//Load URL into Browser
		driver.get(baseurl);
		String Expecteditemtopurchase="iPhone";
		String Expectedprice="$123.20";
		String Expectedmodelname="product 11";
		String Expectedquantity="1";
		int testpassed=0;
		int testfailed=0;
		
		//Navigation to Phones & PDAs Page
		driver.findElement(By.xpath("//a[text()='Phones & PDAs']")).click();
		String Expectednavigation1="Phones & PDAs";
		String Actualnavigation1=driver.getTitle();
		if(Actualnavigation1.equals(Expectednavigation1)) {
			System.out.println("Test001 Passed- Navigates to Phones & PDAs Page");
			testpassed++;
		}
		else {
			System.out.println("Test001 Failed-Does not Navigates to Phones & PDAs Page");
			testfailed++;
		}
		Thread.sleep(2000);
		//buying iphone
		driver.findElement(By.xpath("//i[@class='fa fa-th-list']")).click();
	    List<WebElement>listofitem=driver.findElements(By.xpath("//div[@class='image']//img"));
	    for (WebElement list:listofitem) {
	    	String availableitemlist=list.getAttribute("title");
	    	if(availableitemlist.equals(Expecteditemtopurchase)) {
	    		list.click();
	    		break;
	    		}
	    	}
	   String Expectednavigation2="iPhone";
	   String Actualnavigation2=driver.getTitle();
	   if(Actualnavigation2.equals(Expectednavigation2)) {
		   System.out.println("Test002 Passed- Navigates to iPhone Product Page");
		   testpassed++;
	   }
	   else {
		   System.out.println("Test002 Failed- Does not Navigates to iPhone Product Page");
		   testfailed++;
	   }
	   Thread.sleep(2000);
        //Add to cart
	   driver.findElement(By.id("button-cart")).click();
	   Thread.sleep(1000);
	   driver.findElement(By.id("cart")).click();
	   Thread.sleep(1000);
	   driver.findElement(By.xpath("(//p[@class='text-right']//a)[1]")).click();
	   String Expectednavigation3="Shopping Cart";
	   String Actualnavigation3=driver.getTitle();
	   if(Actualnavigation3.equals(Expectednavigation3)) {
		   System.out.println("Test003 Passed- Navigates to Shopping Cart Page");
		   testpassed++;
	   }
	   else {
		   System.out.println("Test003 Failed- Does not Navigates to Shopping Cart Page");
		   testfailed++;
	   }
	   Thread.sleep(2000);
	   //Navigation to checkout page
	   driver.findElement(By.linkText("Checkout")).click();
	   String Expectednavigation4="Checkout";
	   String Actualnavigation4=driver.getTitle();
	   if(Actualnavigation4.equals(Expectednavigation4)) {
		   System.out.println("Test004 Passed- Navigates to Checkout Page");
		   testpassed++;
	   }
	   else {
		   System.out.println("Test004 Failed- Does not Navigates to Checkout Page");
		   testfailed++;
	   }
	   
	   //Checkout option
	   driver.findElement(By.xpath("(//div[@class='radio']//input)[2]")).click();
	   Thread.sleep(1000);
	   driver.findElement(By.id("button-account")).click();
	   
	   //Billing details
	   driver.findElement(By.id("input-payment-firstname")).sendKeys("Prakash");
	   Thread.sleep(1000);
	   driver.findElement(By.id("input-payment-lastname")).sendKeys("R");
	   Thread.sleep(1000);
	   driver.findElement(By.id("input-payment-email")).sendKeys("balaprakash150@gmail.com");
	   Thread.sleep(1000);
	   driver.findElement(By.id("input-payment-telephone")).sendKeys("+916282363879");
	   Thread.sleep(1000);
	   driver.findElement(By.id("input-payment-company")).sendKeys("Apple");
	   Thread.sleep(1000);
	   driver.findElement(By.id("input-payment-address-1")).sendKeys("abc");
	   Thread.sleep(1000);
	   driver.findElement(By.id("input-payment-address-2")).sendKeys("xyz");
	   Thread.sleep(1000);
	   driver.findElement(By.id("input-payment-city")).sendKeys("chennai");
	   Thread.sleep(1000);
	   driver.findElement(By.id("input-payment-postcode")).sendKeys("12345");
	   Thread.sleep(1000);
	   WebElement Countrydropdown =driver.findElement(By.id("input-payment-country"));
	   Select Cdropdwon=new Select(Countrydropdown);
	   Cdropdwon.selectByVisibleText("India");
	   Thread.sleep(1000);
	   WebElement Regiondropdown =driver.findElement(By.id("input-payment-zone"));
	   Select Rdropdwon=new Select(Regiondropdown);
	   Rdropdwon.selectByVisibleText("Tamil Nadu");
	   driver.findElement(By.id("button-guest")).click();
	   Thread.sleep(1000);
	   
	   //Delivery Method 
	   driver.findElement(By.id("button-shipping-method")).click();
	   Thread.sleep(1000);
	   
	   //Payment method
	   driver.findElement(By.xpath("//input[@name='agree']")).click();
	   Thread.sleep(1000);
	   driver.findElement(By.id("button-payment-method")).click();
	   
	   //Confirm order
	   String Actualitemtopurchased=driver.findElement(By.xpath("(//table[@class='table table-bordered table-hover']//td)[6]")).getText();
	   String Actualmodelname=driver.findElement(By.xpath("(//table[@class='table table-bordered table-hover']//td)[7]")).getText();
	   String Actualquantity=driver.findElement(By.xpath("(//table[@class='table table-bordered table-hover']//td)[8]")).getText();
	   String Actualprice=driver.findElement(By.xpath("(//table[@class='table table-bordered table-hover']//td)[9]")).getText();
	   
	   if(Actualitemtopurchased.equals(Expecteditemtopurchase)||Actualmodelname.equals(Expectedmodelname)||Actualquantity.equals(Expectedquantity)||Actualprice.equals(Expectedprice)) {
		   System.out.println("Test005 Passed- Expected item purchased");
		   testpassed++;
	   }
	   else {
		   System.out.println("Test005 Failed- Expected item not purchased");
		   testfailed++;
	   }
	   //Table details 
	   List<WebElement>orderdetailsheader=driver.findElements(By.xpath("//table[@class='table table-bordered table-hover']//thead//td"));
	   List<WebElement>orderdetailsbody=driver.findElements(By.xpath("//table[@class='table table-bordered table-hover']//tbody//td"));
	   System.out.println("");
	   System.out.println("Order details");
	   System.out.println("**************");
	   for (int i=0;i<=4;i++) {
		   System.out.print(orderdetailsheader.get(i).getText());
		  for (int j=i;j<=i;j++) {
			  System.out.println(": "+orderdetailsbody.get(j).getText());
		  }
	   }
	   Thread.sleep(1000);
	   driver.findElement(By.id("button-confirm")).click();
	   
	   //Order success 
	   String Expectedcheckoutmsg="Success";
       String Actualcheckoutmsg=driver.findElement(By.linkText("Success")).getText();
	   if (Actualcheckoutmsg.equals(Expectedcheckoutmsg)) {
		   System.out.println("Test006 Passed- order purchased successfully");
		   testpassed++;
	   }
	   else {
		   System.out.println("Test006 Failed- order not purchased successfully");
		   testfailed++;
	   }
	   //Test report
	   System.out.println("**************************");
	   System.out.println("Out of 6 test case "+testpassed+" has passed");
	   System.out.println("Out of 6 test case "+testfailed+" has failed");
	   
	  }

}
